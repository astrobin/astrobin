# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-02-09 10:36
from __future__ import unicode_literals

from django.db import migrations, models

from astrobin_apps_groups.models import GroupCategory

MIGRATION_MAP = {
    1: GroupCategory.PROFESSIONAL_NETWORK,
    11: GroupCategory.CLUB_OR_ASSOCIATION,
    21: GroupCategory.INTERNET_COMMUNITY,
    31: GroupCategory.FRIENDS_OR_PARTNERS,
    41: GroupCategory.GEOGRAPHICAL_AREA,
    51: GroupCategory.AD_HOC_COLLABORATION,
    61: GroupCategory.SPECIFIC_TO_TECHNIQUE,
    71: GroupCategory.SPECIFIC_TO_TARGET,
    81: GroupCategory.SPECIFIC_TO_EQUIPMENT,
    101: GroupCategory.OTHER,
}  # type: Dict[int, str]


def get_groups(apps):
    # type: (object) -> QuerySet
    return apps.get_model('astrobin_apps_groups', 'Group').objects.all()


def migrate_group_category_values(apps, schema_editor):
    for old_value, new_value in MIGRATION_MAP.iteritems():
        get_groups(apps).filter(category=old_value).update(category=new_value)


def reverse_migrate_group_category_values(apps, schema_editor):
    for old_value, new_value in MIGRATION_MAP.iteritems():
        get_groups(apps).filter(category=new_value).update(category=old_value)


class Migration(migrations.Migration):
    dependencies = [
        ('astrobin_apps_groups', '0002_auto_20171109_2307'),
    ]

    operations = [
        migrations.AlterField(
            model_name='group',
            name='category',
            field=models.CharField(choices=[(b'PROFESSIONAL_NETWORK', 'Professional network'),
                                            (b'CLUB_OR_ASSOCIATION', 'Club or association'),
                                            (b'INTERNET_COMMUNITY', 'Internet community'),
                                            (b'FRIENDS_OR_PARTNERS', 'Friends or partners'),
                                            (b'GEOGRAPHICAL_AREA', 'Geographical area'),
                                            (b'AD_HOC_COLLABORATION', 'Ad-hoc collaboration'),
                                            (b'SPECIFIC_TO_TECHNIQUE', 'Specific to an imaging technique'),
                                            (b'SPECIFIC_TO_TARGET', 'Specific to an astrophotography target'),
                                            (b'SPECIFIC_TO_EQUIPMENT', 'Specific to certain equipment'),
                                            (b'OTHER', 'Other')], max_length=100, verbose_name='Category'),
        ),
        migrations.RunPython(migrate_group_category_values, reverse_migrate_group_category_values),
    ]
