# Generated by Django 2.2.24 on 2023-02-16 20:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('astrobin_apps_equipment', '0112_add_verbose_names_to_sensor_fields'),
        ('astrobin', '0166_add_dark_matter_astrophotography'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='deepsky_acquisition',
            options={},
        ),
        migrations.AddField(
            model_name='solarsystem_acquisition',
            name='saved_on',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='deepsky_acquisition',
            name='filter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deepsky_acquisitions', to='astrobin.Filter', verbose_name='Filter'),
        ),
        migrations.AlterField(
            model_name='deepsky_acquisition',
            name='filter_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deepsky_acquisitions', to='astrobin_apps_equipment.Filter', verbose_name='Filter'),
        ),
        migrations.CreateModel(
            name='SolarSystem_Acquisition_Preset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('frames', models.IntegerField(blank=True, help_text='The total number of frames you have stacked.', null=True, verbose_name='Number of frames')),
                ('fps', models.DecimalField(blank=True, decimal_places=5, help_text='Frames per second.', max_digits=12, null=True, verbose_name='FPS')),
                ('exposure_per_frame', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Exposure per frame (ms)')),
                ('focal_length', models.IntegerField(blank=True, help_text='The focal length of the whole optical train, including barlow lenses or other components.', null=True, verbose_name='Focal length')),
                ('cmi', models.DecimalField(blank=True, decimal_places=2, help_text='Latitude of the first Central Meridian.', max_digits=5, null=True, verbose_name='CMI')),
                ('cmii', models.DecimalField(blank=True, decimal_places=2, help_text='Latitude of the second Central Meridian.', max_digits=5, null=True, verbose_name='CMII')),
                ('cmiii', models.DecimalField(blank=True, decimal_places=2, help_text='Latitude of the third Central Meridian.', max_digits=5, null=True, verbose_name='CMIII')),
                ('seeing', models.IntegerField(blank=True, help_text='Your estimation of the seeing, on a scale from 1 to 5. Larger is better.', null=True, verbose_name='Seeing')),
                ('transparency', models.IntegerField(blank=True, help_text='Your estimation of the transparency, on a scale from 1 to 10. Larger is better.', null=True, verbose_name='Transparency')),
                ('time', models.CharField(blank=True, help_text='Please use the following format: hh:mm.', max_length=5, null=True, verbose_name='Time')),
                ('saved_on', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeepSky_Acquisition_Preset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('is_synthetic', models.BooleanField(default=False, verbose_name='Synthetic channel')),
                ('binning', models.IntegerField(blank=True, choices=[(1, '1x1'), (2, '2x2'), (3, '3x3'), (4, '4x4')], default=0, null=True, verbose_name='Binning')),
                ('number', models.PositiveIntegerField(blank=True, help_text='The number of sub-frames.', null=True, verbose_name='Number')),
                ('duration', models.DecimalField(blank=True, decimal_places=2, help_text='Duration of each sub-frame, in seconds.', max_digits=10, null=True, verbose_name='Duration')),
                ('iso', models.PositiveIntegerField(blank=True, null=True, verbose_name='ISO')),
                ('gain', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Gain')),
                ('f_number', models.DecimalField(blank=True, decimal_places=2, help_text='If you used a camera lens, please specify the f-number (also known as f-ratio or f-stop) that you used for this acquisition session.', max_digits=4, null=True, verbose_name='f-number')),
                ('sensor_cooling', models.IntegerField(blank=True, help_text='The temperature of the chip. E.g.: -20.', null=True, verbose_name='Sensor cooling')),
                ('darks', models.PositiveIntegerField(blank=True, help_text='The number of dark frames.', null=True, verbose_name='Darks')),
                ('flats', models.PositiveIntegerField(blank=True, help_text='The number of flat frames.', null=True, verbose_name='Flats')),
                ('flat_darks', models.PositiveIntegerField(blank=True, help_text='The number of dark flat frames.', null=True, verbose_name='Flat darks')),
                ('bias', models.PositiveIntegerField(blank=True, help_text='The number of bias/offset frames.', null=True, verbose_name='Bias')),
                ('bortle', models.PositiveIntegerField(blank=True, choices=[(1, '1 - Excellent dark-site sky (BLACK)'), (2, '2 - Typical truly dark site (GRAY)'), (3, '3 - Rural sky (BLUE)'), (4, '4 - Rural/suburban transition (GREEN/YELLOW)'), (5, '5 - Suburban sky (ORANGE)'), (6, '6 - Bright suburban sky (RED)'), (7, '7 - Suburban/urban transition or Full Moon (RED)'), (8, '8 - City sky (WHITE)'), (9, '9 - Inner city sky (WHITE)')], help_text='Quality of the sky according to <a href="http://en.wikipedia.org/wiki/Bortle_Dark-Sky_Scale" target="_blank">the Bortle Scale</a>.', null=True, verbose_name='Bortle Dark-Sky Scale')),
                ('mean_sqm', models.DecimalField(blank=True, decimal_places=2, help_text='As measured with your Sky Quality Meter.', max_digits=5, null=True, verbose_name='Mean mag/arcsec^2')),
                ('mean_fwhm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Mean FWHM')),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text='Ambient temperature (in Centigrade degrees).', max_digits=5, null=True, verbose_name='Temperature')),
                ('advanced', models.BooleanField(default=False, editable=False)),
                ('saved_on', models.DateTimeField(auto_now=True, null=True)),
                ('filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deepsky_acquisition_presets', to='astrobin.Filter', verbose_name='Filter')),
                ('filter_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deepsky_acquisition_presets', to='astrobin_apps_equipment.Filter', verbose_name='Filter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
